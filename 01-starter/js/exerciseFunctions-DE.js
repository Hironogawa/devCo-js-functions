// Hinweis: Deine Aufgabe ist es, die Funktionalit√§t jeder Funktion gem√§√ü den Anweisungen zu implementieren.

// √úbung 1: Erstelle eine Funktion namens 'add', die zwei Parameter 'a' und 'b' akzeptiert.
// Schreibe die Funktion so, dass sie die Summe von 'a' und 'b' zur√ºckgibt.
function add(a, b) {
  // Dein Code hier
}

// √úbung 2: Erstelle eine Funktion namens 'subtract', die zwei Parameter 'a' und 'b' akzeptiert.
// Schreibe die Funktion so, dass sie das Ergebnis der Subtraktion von 'b' von 'a' zur√ºckgibt.
function subtract(a, b) {
  // Dein Code hier
}

// √úbung 3: Erstelle eine Funktion namens 'multiply', die zwei Parameter 'a' und 'b' akzeptiert.
// Schreibe die Funktion so, dass sie das Produkt von 'a' und 'b' zur√ºckgibt.
function multiply(a, b) {
  // Dein Code hier
}

// √úbung 4: Erstelle eine Funktion namens 'divide', die zwei Parameter 'a' und 'b' akzeptiert.
// Schreibe die Funktion so, dass sie das Ergebnis der Division von 'a' durch 'b' zur√ºckgibt.
// Behandle den Fall, in dem 'b' gleich 0 ist, indem du "Fehler" zur√ºckgibst.
function divide(a, b) {
  // Dein Code hier
}

// √úbung 5: Erstelle eine Funktion namens 'randomNum', die zwei Parameter 'a' und 'b' akzeptiert.
// Schreibe die Funktion so, dass sie eine zuf√§llige Ganzzahl zwischen 'a' und 'b' (einschlie√ülich) zur√ºckgibt.
function randomNum(a, b) {
  // Dein Code hier
}

// √úbung 6: Erstelle eine Funktion namens 'square', die einen Parameter 'a' akzeptiert.
// Schreibe die Funktion so, dass sie das Quadrat von 'a' zur√ºckgibt.
function square(a) {
  // Dein Code hier
}

// √úbung 7: Erstelle eine Funktion namens 'rootOf', die einen Parameter 'a' akzeptiert.
// Schreibe die Funktion so, dass sie die Quadratwurzel von 'a' zur√ºckgibt.
function rootOf(a) {
  // Dein Code hier
}

// √úbung 8: Erstelle eine Funktion namens 'doubleCount', die einen Parameter 'a' akzeptiert.
// Schreibe die Funktion so, dass sie den doppelten Wert von 'a' zur√ºckgibt.
function doubleCount(a) {
  // Dein Code hier
}

// √úbung 9: Erstelle eine Funktion namens 'getInput', die einen Parameter 'id' akzeptiert.
// Schreibe die Funktion so, dass sie das HTML-Element mit der angegebenen 'id'
// mithilfe der Methode 'document.getElementById()' zur√ºckgibt.
function getInput(id) {
  // Dein Code hier
}

// √úbung 10: Erstelle eine Funktion namens 'isEven', die einen Parameter 'number' akzeptiert.
// Schreibe die Funktion so, dass sie true zur√ºckgibt, wenn 'number' gerade ist, andernfalls false.
function isEven(number) {
  // Dein Code hier
}

// √úbung 11: Erstelle eine Funktion namens 'countDigits', die einen Parameter 'number' akzeptiert.
// Schreibe die Funktion so, dass sie die Anzahl der Ziffern in 'number' zur√ºckgibt.
function countDigits(number) {
  // Dein Code hier
}

// √úbung 12: Erstelle eine Funktion namens 'reverseString', die einen Parameter 'str' akzeptiert.
// Schreibe die Funktion so, dass sie 'str' in umgekehrter Reihenfolge zur√ºckgibt.
function reverseString(str) {
  // Dein Code hier
}

// √úbung 13: Erstelle eine Funktion namens 'isPalindrome', die einen Parameter 'str' akzeptiert.
// Schreibe die Funktion so, dass sie true zur√ºckgibt, wenn 'str' ein Palindrom ist (von vorne und hinten gleich), andernfalls false.
function isPalindrome(str) {
  // Dein Code hier
}

// √úbung 14: Erstelle eine Funktion namens 'factorial', die einen Parameter 'n' akzeptiert.
// Schreibe die Funktion so, dass sie die Fakult√§t von 'n' zur√ºckgibt.
function factorial(n) {
  // Dein Code hier
}

// √úbung 15: Erstelle eine Funktion namens 'fibonacci', die einen Parameter 'n' akzeptiert.
// Schreibe die Funktion so, dass sie die n-te Zahl in der Fibonacci-Folge zur√ºckgibt.
function fibonacci(n) {
  // Dein Code hier
}

// √úbung 16: Erstelle eine Funktion namens 'findLongestWord', die ein Array von W√∂rtern 'words' akzeptiert.
// Schreibe die Funktion so, dass sie die L√§nge des l√§ngsten Worts in 'words' zur√ºckgibt.
function findLongestWord(words) {
  // Dein Code hier
}

// √úbung 17: Erstelle eine Funktion namens 'capitalizeFirstLetter', die einen Parameter 'str' akzeptiert.
// Schreibe die Funktion so, dass sie 'str' mit dem ersten Buchstaben gro√ügeschrieben zur√ºckgibt.
function capitalizeFirstLetter(str) {
  // Dein Code hier
}

// √úbung 18: Erstelle eine Funktion namens 'countOccurrences', die ein Array 'arr' und ein Element 'target' akzeptiert.
// Schreibe die Funktion so, dass sie die Anzahl der Vorkommen von 'target' in 'arr' zur√ºckgibt.
function countOccurrences(arr, target) {
  // Dein Code hier
}

// √úbung 19: Erstelle eine Funktion namens 'sumArray', die ein Array 'arr' von Zahlen akzeptiert.
// Schreibe die Funktion so, dass sie die Summe aller Elemente in 'arr' zur√ºckgibt.
function sumArray(arr) {
  // Dein Code hier
}

// √úbung 20: Erstelle eine Funktion namens 'averageArray', die ein Array 'arr' von Zahlen akzeptiert.
// Schreibe die Funktion so, dass sie den Durchschnitt (Mittelwert) aller Elemente in 'arr' zur√ºckgibt.
function averageArray(arr) {
  // Dein Code hier
}

// √úbung 21: Erstelle eine Funktion namens 'rockPaperScissors', die zwei Parameter akzeptiert: 'player1' und 'player2'.
// Schreibe die Funktion so, dass sie ein Spiel von Schere-Stein-Papier zwischen den beiden Spielern simuliert
// und das Ergebnis als Zeichenkette zur√ºckgibt ("Spieler 1 gewinnt", "Spieler 2 gewinnt" oder "Unentschieden").
function rockPaperScissors(player1, player2) {
  // Dein Code hier
}

// √úbung 22: Erstelle eine Funktion namens 'magic8Ball', die keine Parameter akzeptiert.
// Schreibe die Funktion so, dass sie eine zuf√§llige Antwort eines magischen 8-Balls zur√ºckgibt (z. B. "Ja", "Nein", "Frage sp√§ter nochmal").
function magic8Ball() {
  // Dein Code hier
}

// √úbung 23: Erstelle eine Funktion namens 'calculateBMI', die zwei Parameter akzeptiert: 'weight' in Kilogramm und 'height' in Metern.
// Schreibe die Funktion so, dass sie den Body-Mass-Index (BMI) anhand der Formel berechnet und zur√ºckgibt: Gewicht / (Gr√∂√üe * Gr√∂√üe).
function calculateBMI(weight, height) {
  // Dein Code hier
}

// √úbung 24: Erstelle eine Funktion namens 'convertToFahrenheit', die eine Temperatur in Celsius akzeptiert.
// Schreibe die Funktion so, dass sie die Temperatur in Fahrenheit umrechnet und zur√ºckgibt: (C * 9/5) + 32.
function convertToFahrenheit(celsius) {
  // Dein Code hier
}

// √úbung 25: Erstelle eine Funktion namens 'countVowels', die einen String 'str' akzeptiert.
// Schreibe die Funktion so, dass sie die Anzahl der Vokale (a, e, i, o, u) in 'str' z√§hlt und zur√ºckgibt.
function countVowels(str) {
  // Dein Code hier
}

// √úbung 26: Erstelle eine Funktion namens 'emojiTranslator', die einen String 'text' akzeptiert.
// Schreibe die Funktion so, dass sie bestimmte Schl√ºsselw√∂rter (z. B. ":)" durch "üòÄ", ":(" durch "üò¢", usw.) ersetzt
// und den √ºbersetzten Emoji-Text zur√ºckgibt.
function emojiTranslator(text) {
  // Dein Code hier
}

// √úbung 27: Erstelle eine Funktion namens 'coinFlip', die keine Parameter akzeptiert.
// Schreibe die Funktion so, dass sie eine M√ºnzwurf simuliert und "Kopf" oder "Zahl" zur√ºckgibt.
function coinFlip() {
  // Dein Code hier
}

// √úbung 28: Erstelle eine Funktion namens 'factorialDigitSum', die eine Zahl 'n' akzeptiert.
// Schreibe die Funktion so, dass sie die Fakult√§t von 'n' berechnet und die Summe ihrer Ziffern zur√ºckgibt.
function factorialDigitSum(n) {
  // Dein Code hier
}

// √úbung 29: Erstelle eine Funktion namens 'reverseArray', die ein Array 'arr' akzeptiert.
// Schreibe die Funktion so, dass sie ein neues Array mit Elementen in umgekehrter Reihenfolge zur√ºckgibt.
function reverseArray(arr) {
  // Dein Code hier
}

// √úbung 30: Erstelle eine Funktion namens 'calculateTip', die zwei Parameter akzeptiert: 'billAmount' und 'tipPercentage'.
// Schreibe die Funktion so, dass sie den Trinkgeldbetrag basierend auf der Rechnungssumme und dem Trinkgeldprozentsatz berechnet und zur√ºckgibt.
function calculateTip(billAmount, tipPercentage) {
  // Dein Code hier
}
